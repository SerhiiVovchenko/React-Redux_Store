{"version":3,"sources":["features/amount.ts","app/hooks.ts","components/Amount.tsx","features/goods.ts","components/GoodsList.tsx","features/position.ts","components/Position.tsx","App.tsx","app/store.ts","index.tsx"],"names":["action","value","type","payload","amountReducer","amount","useAppSelector","useSelector","Amount","dispatch","useDispatch","state","add","amountAction","take","className","onClick","actions","good","goodsReducer","goods","filter","GoodsList","useState","newGood","setNewGood","onSubmit","event","preventDefault","goodsActions","onChange","e","target","map","startPosition","x","y","positionReducer","position","Position","transformValue","positionAction","style","transform","App","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2ce7306.chunk.js","sourcesContent":["type AddAction = { type: 'amount/ADD', payload: number };\ntype TakeAction = { type: 'amount/TAKE', payload: number };\ntype ClearAction = { type: 'amount/CLEAR' };\n\nconst add = (value: number): AddAction => ({\n  type: 'amount/ADD',\n  payload: value,\n});\n\nconst take = (value: number): TakeAction => ({\n  type: 'amount/TAKE',\n  payload: value,\n});\n\nconst clear = (): ClearAction => ({\n  type: 'amount/CLEAR',\n});\n\ntype Actions = AddAction | TakeAction | ClearAction;\n\nconst amountReducer = (amount = 0, action: Actions) => {\n  switch (action.type) {\n    case 'amount/ADD':\n      return amount + action.payload;\n\n    case 'amount/TAKE': {\n      if (action.payload > amount) {\n        return amount;\n      }\n\n      return amount - action.payload;\n    }\n\n    case 'amount/CLEAR':\n      return 0;\n\n    default:\n      return amount;\n  }\n};\n\nexport const action = { add, take, clear };\n\nexport default amountReducer;\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from './store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useDispatch } from 'react-redux';\nimport React from 'react';\nimport { action as amountAction } from '../features/amount';\nimport { useAppSelector } from '../app/hooks';\n\nexport const Amount: React.FC = () => {\n  const dispatch = useDispatch();\n  const amount = useAppSelector(state => state.amount);\n\n  const add = (value: number) => dispatch(amountAction.add(value));\n  const take = (value: number) => dispatch(amountAction.take(value));\n  const clear = () => dispatch(amountAction.clear());\n\n  function renderContent(content: unknown) {\n    if (typeof content === 'string' || typeof content === 'number') {\n      return content;\n    }\n\n    return content;\n  }\n\n  return (\n    <h2 className=\"amount\">\n      <span>\n        Amount:\n        {renderContent(amount)}\n      </span>\n\n      <button type=\"button\" onClick={() => take(50)}>-50</button>\n      <button type=\"button\" onClick={() => take(10)}>-10</button>\n      <button type=\"button\" onClick={clear}>‚ùå</button>\n      <button type=\"button\" onClick={() => add(10)}>+10</button>\n      <button type=\"button\" onClick={() => add(50)}>+50</button>\n    </h2>\n  );\n};\n","type AddAction = { type: 'goods/ADD', payload: string };\ntype TakeAction = { type: 'goods/TAKE', payload: string };\ntype ClearAction = { type: 'goods/CLEAR' };\n\nconst add = (good: string): AddAction => ({\n  type: 'goods/ADD',\n  payload: good,\n});\n\nconst take = (good: string): TakeAction => ({\n  type: 'goods/TAKE',\n  payload: good,\n});\n\nconst clear = (): ClearAction => ({\n  type: 'goods/CLEAR',\n});\n\ntype Actions = AddAction | TakeAction | ClearAction;\n\nconst goodsReducer = (goods: string[] = [], action: Actions) => {\n  switch (action.type) {\n    case 'goods/ADD':\n      return [...goods, action.payload];\n\n    case 'goods/TAKE':\n      return goods.filter(good => good !== action.payload);\n\n    case 'goods/CLEAR':\n      return [];\n\n    default:\n      return goods;\n  }\n};\n\nexport const actions = { add, take, clear };\n\nexport default goodsReducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../app/hooks';\nimport { actions as goodsActions } from '../features/goods';\n\nexport const GoodsList = () => {\n  const [newGood, setNewGood] = useState('');\n  const goods = useAppSelector(state => state.goods);\n  const dispatch = useDispatch();\n\n  const addGood = (goodToAdd: string) => dispatch(goodsActions.add(goodToAdd));\n\n  const removeGood = (goodToRemove: string) => dispatch(goodsActions.take(goodToRemove));\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!newGood) {\n      return;\n    }\n\n    addGood(newGood);\n    setNewGood('');\n  };\n\n  return (\n    <section className=\"goods\">\n      <h2>Goods:</h2>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={newGood}\n          onChange={e => setNewGood(e.target.value)}\n        />\n        <button type=\"button\">Add</button>\n      </form>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good}>\n            {/* eslint-disable-next-line */}\n            <button\n              type=\"button\"\n              onClick={() => removeGood(good)}\n              className=\"delete\"\n            />\n\n            {good}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","type MoveLeftAction = { type: 'position/MOVE_LEFT' };\ntype MoveRightAction = { type: 'position/MOVE_RIGHT' };\ntype MoveUpAction = { type: 'position/MOVE_UP' };\ntype MoveDownAction = { type: 'position/MOVE_DOWN' };\n\nconst moveLeft = (): MoveLeftAction => ({\n  type: 'position/MOVE_LEFT',\n});\n\nconst moveRight = (): MoveRightAction => ({\n  type: 'position/MOVE_RIGHT',\n});\n\nconst moveUp = (): MoveUpAction => ({\n  type: 'position/MOVE_UP',\n});\n\nconst moveDown = (): MoveDownAction => ({\n  type: 'position/MOVE_DOWN',\n});\n\ntype Actions = MoveLeftAction | MoveRightAction | MoveUpAction | MoveDownAction;\n\ntype Position = {\n  x: number,\n  y: number,\n};\n\nconst startPosition = { x: 0, y: 0 };\n\nconst positionReducer = (position: Position = startPosition, action: Actions): Position => {\n  switch (action.type) {\n    case 'position/MOVE_LEFT':\n      return position.x !== 0\n        ? { ...position, x: position.x - 1 }\n        : position;\n\n    case 'position/MOVE_RIGHT':\n      return { ...position, x: position.x + 1 };\n\n    case 'position/MOVE_UP':\n      return position.y !== 0\n        ? { ...position, y: position.y - 1 }\n        : position;\n\n    case 'position/MOVE_DOWN':\n      return position.y < 4\n        ? { ...position, y: position.y + 1 }\n        : position;\n\n    default:\n      return position;\n  }\n};\n\nexport const action = {\n  moveLeft, moveRight, moveUp, moveDown,\n};\n\nexport default positionReducer;\n","import { useDispatch } from 'react-redux';\nimport React from 'react';\nimport { useAppSelector } from '../app/hooks';\nimport { action as positionAction } from '../features/position';\n\nexport const Position: React.FC = () => {\n  const dispatch = useDispatch();\n  const { x, y } = useAppSelector(state => state.position);\n\n  const moveLeft = () => dispatch(positionAction.moveLeft());\n  const moveRight = () => dispatch(positionAction.moveRight());\n  const moveUp = () => dispatch(positionAction.moveUp());\n  const moveDown = () => dispatch(positionAction.moveDown());\n\n  const transformValue = `translate(${x * 100}%, ${y * 100}%)`;\n\n  return (\n    <section className=\"position\">\n      <h2>Position:</h2>\n\n      <div className=\"position__content\">\n        <div className=\"buttons\">\n          <button type=\"button\" onClick={moveUp}>&uarr;</button>\n\n          <div>\n            <button type=\"button\" onClick={moveLeft}>&larr;</button>\n            <strong>\n              {x}\n              :\n              {y}\n            </strong>\n            <button type=\"button\" onClick={moveRight}>&rarr;</button>\n          </div>\n\n          <button type=\"button\" onClick={moveDown}>&darr;</button>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"track\" style={{ transform: transformValue }}>\n            {x + y}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Amount } from './components/Amount';\nimport { GoodsList } from './components/GoodsList';\nimport { Position } from './components/Position';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Amount />\n      <hr />\n      <Position />\n      <hr />\n      <GoodsList />\n    </div>\n  );\n};\n","import { combineReducers, createStore } from 'redux';\nimport amountReducer from '../features/amount';\nimport goodsReducer from '../features/goods';\nimport positionReducer from '../features/position';\n\nconst reducer = combineReducers({\n  amount: amountReducer,\n  goods: goodsReducer,\n  position: positionReducer,\n});\n\nconst store = createStore(reducer);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}